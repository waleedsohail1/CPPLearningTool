
Q1 : What is wrong with the following while loop?
while ( sum <= 1000 )
sum = sum - 30;

a. The parentheses should be braces.
b. Braces are required around sum = sum – 30;.
c. There should be a semicolon after while ( sum <= 1000 ).
d. sum = sum – 30 should be sum = sum + 30 or else 
the loop may never end.@

Q2 : An uninitialized local variable contains:

a. The value last stored in the memory location reserved for that variable.
b. No value.
c. A value of zero.
d. A randomly assigned value.@

Q3 : Which of the following for headers is not valid?

a. for ( int i = 0; i < 10; i++ )
b. int i = 0;
for ( ; i < 10; i++ )
c. for ( int i = 0; int j = 5; ; i++ )
d. All of the above.@

Q4. What three parts of a counting loop must be coordinated in 
order for the loop to work properly?

a. initializing the counter, testing the counter, changing the counter
b. initializing the condition, changing the condition, 
terminating the loop
c. the while, the assignment, and the loop body
d. the while statement, the if statement, and sequential execution.@

Q5. Another word for "looping" is:
a. recapitulation
b. tintinabulation
c. iteration
d. reiteration@

Q6. What makes a loop a counting loop?

a. A loop control variable is tested in the while statement, 
and is changed each time the loop body executes,
b. A counter is counted upwards by one until it hits a particular limit.
c. A counter is counted downwards by one until it hits zero.
d. No loop control variables are used.@

7. Examine the following code:
    int count = 0;                                  
    while ( count <= 6 )  
    {
      count = count + 2; 
    }
	

What does this code print on the monitor?
a. 1 2 3 4 5 6
b. 0 2 4 6 8
c. 0 2 4
d. Error@

8. Examine the following code:
    int count = 7;                                  
    while ( count >= 4 )  
    {
      count = count - 1; 
    }

What does this code print on the monitor?
a. 1 2 3 4 5 6 7
b. 7 6 5 4
c. 6 5 4 3
d. Error @

9. Examine the following code:
    int count = -2 ;                                  
    while ( count < 3 )  
    {
     	cout << "count" << endl;
    }

What does this code print on the monitor
a. -2 -1 1 2 3 4
b. -2 -1 1 2 3
c. -3 -4 -5 -6 -7
d. Error @

10. Examine the following code:
    int count =  1;                                  
    while(true)
	cout << true;

What does this code print on the monitor?
a. 1 2 3 4
b. Error
c. 2 3 4
d. 1 1 1 1 1 1 1 1 1 1 1 . . . .@s